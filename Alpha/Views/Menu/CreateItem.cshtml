@model Alpha.Models.CreateItemViewModel

@{
    /**/

    ViewBag.Title = "CreateItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create a new article</h2>

@using (Html.BeginForm("CreateItem", "Menu", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.MenuId)

    <hr />
    @Html.ValidationSummary("", new { @class = "text-error" })
    @ViewBag.Message
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.SelectedTypeOfFood, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedTypeOfFood, new SelectList(Model.TypeOfFoods))
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.HasSize, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.HasSize, new { @class = "checkbox-inline", @id = "HasSizeChkBx"})
        </div>
    </div>

    <div class="form-group" id="SizedMeal" style="display:none">
        <table  class="table">
            <tr>
                <th>
                    Choisissez les tailles disponnibles
                </th>
                <th>
                    Prix
                </th>
            </tr>
            @Html.EditorFor(m => m.SelectedSizedMeals)
        </table>
    </div>


    <div class="form-group" id="NotSizedMeal">
        @Html.LabelFor(m => m.UnitPrice, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UnitPrice, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IsAvailable, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.IsAvailable, new { @class = "checkbox-inline" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(m => m.Image, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <input type="file" name="image" id="file" /><br><br>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create" />
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var uploadField = document.getElementById("file");

        uploadField.onchange = function () {
            if (this.files[0].size > 15000000) {
                alert("Oups. La taille de l'image ne doit pas dépasser 15Mb. Essayer une autre.");
                this.value = "";
            };
        };

        var sizedMeal = document.getElementById("HasSizeChkBx");
        sizedMeal.onchange = function () {
            console.log("went in the function");
            var disp = document.getElementById("HasSizeChkBx");
            if (disp.checked === true) {
                document.getElementById('SizedMeal').style.display = "block";
                document.getElementById('NotSizedMeal').style.display = "none";
            }
            else {
                document.getElementById('SizedMeal').style.display = "none";
                document.getElementById('NotSizedMeal').style.display = "block";
            };
        };
    </script>
}

