@model Alpha.Models.EditRestoViewModel


@{
    ViewBag.Title = "Edit Restaurant";
}



<h2>Edition restaurant @Model.Name</h2>

@using (Html.BeginForm("Edit", "Restaurant", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>General</h3>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <img src="@Url.Action("RenderRestoPhoto", "Restaurant", new { RestoId = Model.Id })" alt="No picture" />
            @Html.LabelFor(m => m.Image, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <input type="file" name="image" id="file" /><br><br>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", id = "TextBoxVenueLocation" })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>
        <h3>PLages d'heures d'ouvertures</h3>
        <hr />
        <table class="table">
            <tr>
                <th></th>
                <th>
                    Ouverture
                </th>
                <th>
                    Fermeture
                </th>
                <th>
                    Nombre de commande par heure
                </th>
                <th></th>
            </tr>
            <tr>
                <th>
                    Lundi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Monday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Monday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Mardi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Tuesday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Tuesday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Mercredi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Wednesday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Wednesday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Jeudi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Thursday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Thursday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Vendredi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Friday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Friday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Samedi | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Saturday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Saturday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }
            <tr>
                <th>
                    Dimanche | @Html.ActionLink("Add", "AddOpenTimePeriodToRestaurant", new { RestoId = Model.Id, dayOfWeek = DayOfWeek.Sunday })
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.OpeningTimes.Where(x => x.DayOfWeek == DayOfWeek.Sunday).ToList())
            {
                <tr>
                    <th>
                    </th>

                    <td>
                        @item.OpenTime.ToString()
                    </td>
                    <td>
                        @item.CloseTime.ToString()
                    </td>
                    <td>
                        @item.NbAuthorizedOrderPerHour.ToString()
                    </td>
                    <td>@Html.ActionLink("Remove", "RemoveOpenTimePeriodToRestaurant", new { RestoId = Model.Id, SlotId = item.OpenTimePeriodId })</td>
                </tr>
            }


        </table>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <h3>Utilisateurs</h3>
        <hr />
        <table class="table">
            @Html.Label("List of Administrator", new { @class = "control-label col-md-2" })
            @Html.ActionLink("Add Administrator", "AddChefToRestaurant", new { RestoId = Model.Id, ChefOrNotAdmin = false })
            @if (Model.AdministratorsList.Count() == 0)
            {
                <tr>
                    <td>
                        No entry
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.AdministratorsList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }
            }
        </table>
        <hr />
        <table class="table">
            @Html.Label("List of Chefs", new { @class = "control-label col-md-2" }) |
            @Html.ActionLink("Add Chefs", "AddChefToRestaurant", new { RestoId = Model.Id, ChefOrNotAdmin = true })
            @if (Model.ChefsList.Count() == 0)
            {
                <tr>
                    <td>
                        No entry
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model.ChefsList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }
            }
        </table>

        <h3>Menus</h3>
        <hr />
        @if (Model.menu == null)
        {
            @Html.ActionLink("Ajouter un menu", "CreateMenu", "Menu", new { Id = Model.Id }, null)
        }
        else
        {
            @Html.ActionLink("Ajouter un article", "CreateItem", "Menu", new { Id = Model.menu.MenuId }, null)

        }

        <table class="table">
            <tr>
                <th>
                </th>
                <th>
                    @Html.Label("Nom de l'article", new { @class = "control-label col-md-4" })
                </th>
                <th>
                    @Html.Label("Prix", new { @class = "control-label col-md-4" })
                </th>
                <th></th>

            </tr>
            @if (Model.menu != null)
            {
                if (Model.menu.ItemList != null)
                {
                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Frites))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div>
                                    }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">

                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }
                    }

                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Sauce))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>

                                    @Html.DisplayFor(modelItem => item.Name)


                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div>
                                    }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">
                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }

                    }

                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Snack))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div> }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">
                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }

                    }

                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Meal))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div>
                                    }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">
                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }

                    }

                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Boisson))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div>
                                    }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">
                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }

                    }
                    foreach (var item in Model.menu.ItemList.Where(r => r.TypeOfFood == Alpha.Models.TypeOfFood.Menu))
                    {
                        if (item.DeletedOn == null)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("RenderItemPhoto", "Menu", new { ItemId = item.ItemId })" alt="No picture" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (!item.HasSize)
                                    {
                                        <div class="pull-right">
                                            @Html.DisplayFor(modelItem => item.UnitPrice) <text> € </text>
                                        </div>
                                    }
                                    else
                                    {
                                        foreach (var size in item.AvailableSizes)
                                        {
                                            <div class="pull-right">
                                                @(size.MealSize.ToString()) <text> : </text> @(size.Price.ToString()) <text> € </text>
                                            </div>
                                            <br />
                                        }

                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Remove", "DeleteItem", "Menu", new { ItemId = item.ItemId, restoId = Model.Id }, null)

                                </td>
                            </tr>
                        }

                    }


                }

            }
        </table>




    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var uploadField = document.getElementById("file");
        uploadField.onchange = function () {
            if (this.files[0].size > 15000000) {
                alert("Oups. La taille de l'image ne doit pas dépasser 15Mb. Essayer une autre.");
                this.value = "";
            };
        };
    </script>
}




